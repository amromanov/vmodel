function [res time] = %funcname(obj, n, no_res, pres, ptime)
%[res] = %funcname(obj, n, no_res)
%Function simulates n-clock periods of HDL-core.
%obj - object created by Create%modelname
%n - number of clock periods to simulate (can be fractional)
%no_res - if set to 1, no simulation output is needed
%pres - previous result, that should be concated before current
%ptime - previous time vector, that shoul be concated before current
%res - result of simulation
%
%Use %funcname(obj,0,1) to save coverage analysis results
%
%help_string

%%*********************vmodel MATLAB Verilog simulator******************
%%Moscow, Control Problems Department MIREA, 2009-2014
%%Authors: Karyakin D, Romanov A
%%- 
%%Distributed under the GNU LGPL
%%**********************************************************************

  if (nargin == 0)
	   fprintf('No object parameter!');
	   help %funcname;
	   return;
  end
  if (nargin == 1)
    no_res = 0; 
    n = 1;
  end
  if (nargin == 2)
	   no_res = 0;
  end

  if(isa(no_res,'struct'))
    if(nargin>3)
        ptime=pres;
    end
    pres=no_res;
    no_res=0;
  end

  %64arch
  if (no_res == 1)
    %mex_name(%inputsn*2);
  else
    [%outputs] = %mex_name(%inputsn*2);
    %time_recalc
    if exist('pres','var')
        %concat_results
    end
    if exist('ptime','var')
        time=[ptime; time];
    end
  end

end